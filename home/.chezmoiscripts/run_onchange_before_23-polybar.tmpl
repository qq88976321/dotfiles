{{- if .is_desktop_env -}}

#!/usr/bin/env bash

# Exit on an Error or if an Unset variable is referenced.
set -eu

# When used in combination with set -e, pipefail will make a script exit if any command in a pipeline errors.
set -o pipefail

# Print a trace of simple commands and their arguments after they are expanded and before they are executed.
set -x

if [[ ! -x $(command -v polybar) ]]; then
    # https://github.com/polybar/polybar/wiki/Compiling#dependencies


    # install dependencies
    sudo apt-get install -yq build-essential git cmake cmake-data pkg-config python3-sphinx python3-packaging libuv1-dev libcairo2-dev libxcb1-dev libxcb-util0-dev libxcb-randr0-dev libxcb-composite0-dev python3-xcbgen xcb-proto libxcb-image0-dev libxcb-ewmh-dev libxcb-icccm4-dev

    # optinoal dependencies
    sudo apt-get install libxcb-xkb-dev libxcb-xrm-dev libxcb-cursor-dev libasound2-dev libpulse-dev i3-wm libjsoncpp-dev libmpdclient-dev libcurl4-openssl-dev libnl-genl-3-dev


    # build from source
    LATEST_TAG=$(git ls-remote --tags --sort="v:refname" https://github.com/polybar/polybar.git | tail -n1 | sed 's/.*\///; s/\^{}//')
    git clone --recursive --depth 1 --branch "$LATEST_TAG" https://github.com/polybar/polybar.git /tmp/polybar
    cd /tmp/polybar

    mkdir build
    cd build
    cmake ..
    make -j$(nproc)
    # Optional. This will install the polybar executable in /usr/local/bin
    sudo make install
else
    echo "[INFO] polybar is already installed."
fi




{{- end -}}
